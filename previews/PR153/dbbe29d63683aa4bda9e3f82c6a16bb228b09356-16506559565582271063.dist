í«,jìŸ$297902ae-b2af-425c-911e-591ccc2da03cÄ£subÇßpayloadì»´kí«,jìŸ$297902ae-b2af-425c-911e-591ccc2da03cÄ£subÇßpayloadï»/kí«∫jìŸ$297902ae-b2af-425c-911e-591ccc2da03cÉ¥16530525924724424133«eí¥16530525924724424133ì¥14520655624260076578«eí¥14520655624260076578≥1990584240290742746«eí≥1990584240290742746£subÉ£obs«h¥14520655624260076578ßpayload»=fìÇ¥12475501460094978529«h≥1990584240290742746≤339906430103279771«h¥16530525924724424133Ÿßreturn (index) => {
    const values = __lookup_interpolated('339906430103279771').value
    __lookup_interpolated('12475501460094978529').notify(values[index - 1])
}
Ÿ9/home/runner/work/JSServe.jl/JSServe.jl/src/widgets.jl:55®msg_type°1»Ukí«[jìŸ$297902ae-b2af-425c-911e-591ccc2da03cÅ¥15856238998985854110«eí¥15856238998985854110£subÉ£obs«h¥15856238998985854110ßpayload«√fìÄŸjreturn value=> JSServe.update_node_attribute(document.querySelector('[data-jscall-id="2"]'), 'max', value)ŸS/home/runner/work/JSServe.jl/JSServe.jl/src/rendering/hyperscript_integration.jl:53®msg_type°1»(kí«,jìŸ$297902ae-b2af-425c-911e-591ccc2da03cÄ£subÉ£obs«h¥14520655624260076578ßpayload«≈fìÄŸlreturn value=> JSServe.update_node_attribute(document.querySelector('[data-jscall-id="2"]'), 'value', value)ŸS/home/runner/work/JSServe.jl/JSServe.jl/src/rendering/hyperscript_integration.jl:53®msg_type°1»5kí«\jìŸ$297902ae-b2af-425c-911e-591ccc2da03cÅ¥11385450063616156268«eí¥11385450063616156268°1£subÉ£obs«h¥11385450063616156268ßpayload«¢fìÄŸUreturn (val)=> {
    document.querySelector('[data-jscall-id="3"]').innerText = val
}ŸG/home/runner/work/JSServe.jl/JSServe.jl/src/rendering/observables.jl:85®msg_type°1»qkí«,jìŸ$297902ae-b2af-425c-911e-591ccc2da03cÄ£subÇßpayload»)fìÅ≥6178333329373766613«h¥14520655624260076578Ÿæ((node) => {
    node['oninput'] = (event)=> {
    __lookup_interpolated('6178333329373766613').notify(parseInt(event.srcElement.value))
}
})(document.querySelector('[data-jscall-id="2"]'));Ÿ9/home/runner/work/JSServe.jl/JSServe.jl/src/widgets.jl:66®msg_type°2®msg_type°9»ákí«,jìŸ$297902ae-b2af-425c-911e-591ccc2da03cÄ£subÇßpayload»?fìÅ¥11898666509075620164É°1í«_kí«-jìŸ$be64c684-0129-4379-b8a8-373b64c5d3b3Ä§rootÉßpayload°1¢id¥11385450063616156268®msg_type°0«]kí«-jìŸ$be64c684-0129-4379-b8a8-373b64c5d3b3Ä§rootÉßpayload¢id≥1990584240290742746®msg_type°0°2í«_kí«-jìŸ$be64c684-0129-4379-b8a8-373b64c5d3b3Ä§rootÉßpayload°4¢id¥11385450063616156268®msg_type°0«]kí«-jìŸ$be64c684-0129-4379-b8a8-373b64c5d3b3Ä§rootÉßpayload¢id≥1990584240290742746®msg_type°0°3í«_kí«-jìŸ$be64c684-0129-4379-b8a8-373b64c5d3b3Ä§rootÉßpayload°9¢id¥11385450063616156268®msg_type°0«]kí«-jìŸ$be64c684-0129-4379-b8a8-373b64c5d3b3Ä§rootÉßpayload¢id≥1990584240290742746®msg_type°0⁄öJSServe.fetch_binary('63b6d1cd5272f6344735f4f61f00ac9670b445de-9032048884471094182.dist').then(binary => {
    const statemap = __lookup_interpolated('11898666509075620164')
    console.log(statemap)
    const observables = JSServe.decode_binary(binary, false);
    JSServe.onany(observables, (states) => {
        console.log(states)
        // messages to send for this state of that observable
        const messages = statemap[states]
        console.log(messages)
        // not all states trigger events
        // so some states won't have any messages recorded
        if (messages){
            messages.forEach(JSServe.process_message)
        }
    })
})
Ÿ9/home/runner/work/JSServe.jl/JSServe.jl/src/export.jl:126®msg_type°2«Fkí«-jìŸ$be64c684-0129-4379-b8a8-373b64c5d3b3Ä§rootÇßpayloadê®msg_type°9®msg_type°9